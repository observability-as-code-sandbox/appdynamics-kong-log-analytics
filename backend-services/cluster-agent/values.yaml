# Cluster agent deployment mode (MASTER | NAMESPACED)
#deploymentMode: MASTER

# Docker images
imageInfo:
  agentImage: docker.io/appdynamics/cluster-agent
  agentTag: 20.12.1
  operatorImage: docker.io/appdynamics/cluster-agent-operator
  operatorTag: 0.6.6
  imagePullPolicy: Always                               # Will be used for operator pod

# AppDynamics controller info (null VALUES TO BE PROVIDED BY THE USER)
controllerInfo:
  url: http://***REMOVED***:8090 
  account: customer1
  username: appd
  password: appd
  accessKey: SECRET_VALUE
  
  # SSL properties
  customSSLCert: null
  
  # Proxy config
  authenticateProxy: false
  proxyUrl: null
  proxyUser: null
  proxyPassword: null 

# RBAC config
createServiceAccount: true
agentServiceAccount: appdynamics-cluster-agent
operatorServiceAccount: appdynamics-operator

# Cluster agent config
clusterAgent:
  nsToMonitor:
    - default
    - test
  clusterMetricsSyncInterval: 60
  metadataSyncInterval: 60
  eventUploadInterval: 10
  httpClientTimeout: 30
  podBatchSize: 6
  imagePullSecret: ""
  containerProperties:
    containerBatchSize: 5
    containerParallelRequestLimit: 1
    containerRegistrationInterval: 120
  logProperties:
    logFileSizeMb: 5
    logFileBackups: 3
    logLevel: INFO
  metricProperties:
    metricsSyncInterval: 30
    metricUploadRetryCount: 2
    metricUploadRetryIntervalMilliSeconds: 5

# Pod filter config
podFilter: {}

# Instrumentation config
instrumentationConfig:
  enabled: true
  instrumentationMethod: Env
  appNameStrategy: namespace 
  #appNameLabel: app
  defaultAppName: sample-app
  nsToInstrumentRegex: test
  imageInfo:
    java:
      image: "docker.io/appdynamics/java-agent:latest"
      agentMountPath: /opt/appdynamics
      imagePullPolicy: Always
  instrumentationRules:
    - namespaceRegex: test

# Agent pod specific properties
agentPod:
  nodeSelector: {}
  tolerations: []
  resources:
    limits:
      cpu: "1250m"
      memory: "300Mi"
    requests:
      cpu: "750m"
      memory: "150Mi"

# Operator pod specific properties
operatorPod:
  nodeSelector: {}
  tolerations: []
  resources:
    limits:
      cpu: 200m
      memory: 128Mi
    requests:
      cpu: 100m
      memory: 64Mi

# Subcharts boolean install switches
install:
  metrics-server: false
